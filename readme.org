planks: persistent lisp, mumble mumble mumble mumble

* Features
  
  - 99.9% portable common lisp
  - functional, append-only index
  - persistent CLOS object store
  - couchdb-style persistent functional views
  - persistent heap
  - persistent fulltext index
  - thread safe, multi-value concurrency control
  - versatile and lightweight  
  - easy to install and to use

* Download and Install

** Release tarballs
  
  http://common-lisp.net/project/planks/planks-release.tar.gz
  
** Version Control
   
 -  planks is hosted on github project page:  http://github.com/drewc/planks
 -  planks is available via public git repository: https://github.com/drewc/planks.git

* the planks primer
  
** the planks.btree
   
*** traditional btree concept

*** appending-only architecture

*** advantage vs. stateful design
    
*** the planks.btree implementation

    in-memory btree core implementation

** btree data files

*** species of file btree
    
   file vs single-file vs multi vs nested vs object-storage vs heap

*** btree forestry management

    filesystem / best practices?
    nested btree ?
    moving toward single all-accomodating shared file format??
    
** persistent data

*** key/value coding
    
*** shallow copy serialization 
   
** persistent objects

*** persistent-standard-class

** persistent storage

*** heap-btree
    
** persistent views

*** function-btree

** persistent index

*** string-hash

*** text-index
    
** additional examples

*** simple key/value store

    
